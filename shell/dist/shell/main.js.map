{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/state.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#nav {\\r\\n    color: black;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n    border-bottom: 1px black solid;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\na, a:visited, a:active {\\r\\n    color: black;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\na:hover {\\r\\n    color: black;\\r\\n    text-decoration: underline;\\r\\n}\"","module.exports = \"<div class=\\\"wrapper\\\">\\r\\n  <div class=\\\"sidebar\\\" data-background-color=\\\"white\\\" data-active-color=\\\"danger\\\">\\r\\n      <sidebar-cmp></sidebar-cmp>\\r\\n  </div>\\r\\n  <div class=\\\"main-panel\\\">\\r\\n      <navbar-cmp></navbar-cmp>\\r\\n      <div id=\\\"content\\\" class=\\\"content\\\">\\r\\n        <!-- Web Components go here -->\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { element } from 'protractor';\r\nimport { Component } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { StateService } from './state.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n  constructor(private stateService: StateService) {\r\n  }\r\n\r\n  config = {\r\n    \"client-a\": {\r\n      loaded: false,\r\n      path: 'client-a/main.bundle.js',\r\n      element: 'client-a'\r\n    },\r\n    \"client-b\": {\r\n      loaded: false,\r\n      path: 'client-b/main.bundle.js',\r\n      element: 'client-b'\r\n    },\r\n    \"client-c\": {\r\n      loaded: false,\r\n      path: 'client-c/main.bundle.js',\r\n      element: 'flight-booking'\r\n    },\r\n    \"client-d\": {\r\n      loaded: false,\r\n      path: 'client-d/main.bundle.js',\r\n      element: ''\r\n    },\r\n    \"client-e\": {\r\n      loaded: false,\r\n      path: 'client-e/main.js',\r\n      element: 'booking-list'\r\n    }    \r\n\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.load('client-a');\r\n    this.load('client-b');\r\n    this.load('client-c');\r\n    this.load('client-d');\r\n    this.load('client-e');\r\n  }\r\n\r\n  load(name: string): void {\r\n\r\n    const configItem = this.config[name];\r\n    if (configItem.loaded) return;\r\n\r\n    const content = document.getElementById('content');\r\n\r\n    const script = document.createElement('script');\r\n    script.src = configItem.path;\r\n    content.appendChild(script);\r\n    \r\n    if (configItem.element) {\r\n      const element: HTMLElement = document.createElement(configItem.element);\r\n      content.appendChild(element);\r\n\r\n      element.addEventListener('message', msg => this.handleMessage(msg));\r\n      element.setAttribute('state', 'init');\r\n\r\n      script.onerror = () => console.error(`error loading ${configItem.path}`);\r\n\r\n      this.stateService.registerClient(element);\r\n    }\r\n  }\r\n\r\n  handleMessage(msg): void {\r\n    console.debug('shell received message: ', msg.detail);\r\n  }\r\n\r\n}\r\n","import { NavbarComponent } from './navbar/navbar.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidebarComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" (click)=\\\"sidebarToggle()\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar bar1\\\"></span>\\r\\n                <span class=\\\"icon-bar bar2\\\"></span>\\r\\n                <span class=\\\"icon-bar bar3\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Flight42</a>\\r\\n        </div>\\r\\n        <div class=\\\"collapse navbar-collapse\\\">\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                        <i class=\\\"ti-panel\\\"></i>\\r\\n                        <p>Stats</p>\\r\\n                    </a>\\r\\n                </li>\\r\\n                <li class=\\\"dropdown\\\">\\r\\n                      <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                            <i class=\\\"ti-bell\\\"></i>\\r\\n                            <p class=\\\"notification\\\">5</p>\\r\\n                            <p>Notifications</p>\\r\\n                            <b class=\\\"caret\\\"></b>\\r\\n                      </a>\\r\\n                      <ul class=\\\"dropdown-menu\\\">\\r\\n                        <li><a href=\\\"#\\\">Notification 1</a></li>\\r\\n                        <li><a href=\\\"#\\\">Notification 2</a></li>\\r\\n                        <li><a href=\\\"#\\\">Notification 3</a></li>\\r\\n                        <li><a href=\\\"#\\\">Notification 4</a></li>\\r\\n                        <li><a href=\\\"#\\\">Another notification</a></li>\\r\\n                      </ul>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a href=\\\"#\\\">\\r\\n                        <i class=\\\"ti-settings\\\"></i>\\r\\n                        <p>Settings</p>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit, Renderer, ViewChild, ElementRef } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'navbar-cmp',\r\n    templateUrl: 'navbar.component.html'\r\n})\r\nexport class NavbarComponent {\r\n    \r\n    private sidebarVisible: boolean = false;\r\n\r\n    sidebarToggle(){\r\n        var body = document.getElementsByTagName('body')[0];\r\n\r\n        if(this.sidebarVisible == false){\r\n            body.classList.add('nav-open');\r\n            this.sidebarVisible = true;\r\n        } else {\r\n            this.sidebarVisible = false;\r\n            body.classList.remove('nav-open');\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"sidebar-wrapper\\\">\\r\\n    <div class=\\\"logo\\\">\\r\\n        <a class=\\\"simple-text\\\">\\r\\n            <div class=\\\"logo-img\\\">\\r\\n                <img src=\\\"../../assets/img/angular2-logo.png\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n            Flight42\\r\\n        </a>\\r\\n    </div>\\r\\n    <ul class=\\\"nav\\\">\\r\\n        <li>\\r\\n            <a href=\\\"#\\\">\\r\\n                <i class=\\\"ti-home\\\"></i>\\r\\n                <p>Home</p>\\r\\n            </a>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n            <a href=\\\"#/client-a/page1\\\">\\r\\n                <i class=\\\"ti-arrow-top-right\\\"></i>\\r\\n                <p>Flights</p>\\r\\n            </a>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n            <a href=\\\"#/client-b/page1\\\">\\r\\n                <i class=\\\"ti-user\\\"></i>\\r\\n                <p>Passengers</p>\\r\\n            </a>\\r\\n        </li>\\r\\n\\r\\n        <li>\\r\\n            <a href=\\\"#/booking/payment\\\">\\r\\n                <i class=\\\"ti-user\\\"></i>\\r\\n                <p>Payment</p>\\r\\n            </a>\\r\\n        </li>\\r\\n\\r\\n        <li routerLinkActive=\\\"active\\\">\\r\\n            <a (click)=\\\"sendState()\\\">\\r\\n                <i class=\\\"ti-close\\\"></i>\\r\\n                <p>Send State</p>\\r\\n            </a>\\r\\n            </li>\\r\\n\\r\\n        <!--\\r\\n            <li routerLinkActive=\\\"active\\\">\\r\\n            <a>\\r\\n                <i class=\\\"ti-shopping-cart\\\"></i>\\r\\n                <p>Basket</p>\\r\\n            </a>\\r\\n            </li>\\r\\n            <li routerLinkActive=\\\"active\\\">\\r\\n            <a>\\r\\n                <i class=\\\"ti-close\\\"></i>\\r\\n                <p>Hide Basket</p>\\r\\n            </a>\\r\\n            </li>\\r\\n        -->\\r\\n        \\r\\n    </ul>\\r\\n</div>\\r\\n\"","import { StateService } from './../state.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n    selector: 'sidebar-cmp',\r\n    templateUrl: 'sidebar.component.html',\r\n})\r\n\r\nexport class SidebarComponent {\r\n    constructor(private stateService: StateService) {\r\n    }\r\n\r\n    sendState() {\r\n        this.stateService.setState('Info from Shell');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StateService {\r\n\r\n    constructor() { }\r\n\r\n    private state$ = new Subject();\r\n    private clients: HTMLElement[] = [];\r\n\r\n    public registerClient(client: HTMLElement) {\r\n        this.clients.push(client);\r\n    }\r\n\r\n    public setState(state: string) {\r\n        for(let client of this.clients) {\r\n            client.setAttribute('state', state);\r\n        }\r\n    }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}